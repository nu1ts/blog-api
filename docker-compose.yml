services:
  blog-api:
    image: app:latest
    container_name: app
    build:
      context: .
      dockerfile: Dockerfile
    depends_on:
      - blog-db
      - gar70-db
    env_file:
      - .env
    ports:
      - 127.0.0.1:8080:8080
    environment:
      - ConnectionStrings__MainDatabase=${MAIN_DATABASE}
      - ConnectionStrings__GarDatabase=${GAR_DATABASE}
    restart: always
    networks:
      - default
      - internal
    healthcheck:
      test: [ "CMD-SHELL", "curl -f http://127.0.0.1:8080/health || exit 1" ]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 10s
  blog-db:
    image: postgres:15
    container_name: blog-db
    expose:
      - 5432
    environment:
      POSTGRES_USER: ${BLOG_USER}
      POSTGRES_PASSWORD: ${BLOG_PASSWORD}
      POSTGRES_DB: ${BLOG_NAME}
    restart: always
    networks:
      - internal
    volumes:
      - blog-db_data:/var/lib/postgresql/data
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U ${BLOG_USER} -d ${BLOG_NAME} -h 127.0.0.1 || exit 1" ]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 5s
  gar70-db:
    image: postgres:15
    container_name: gar70-db
    expose:
      - 5432
    environment:
      POSTGRES_USER: ${GAR70_USER}
      POSTGRES_PASSWORD: ${GAR70_PASSWORD}
      POSTGRES_DB: ${GAR70_NAME}
    restart: always
    networks:
      - internal
    volumes:
      - gar70-db_data:/var/lib/postgresql/data
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U ${GAR70_USER} -d ${GAR70_NAME} -h 127.0.0.1 || exit 1" ]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 5s

networks:
  default:
  internal:
    internal: true

volumes:
  blog-db_data:
  gar70-db_data: